# This is a basic workflow to help you get started with Actions

name: (temp) CI Portable Postgresql and PostGIS for Windows 
# to follow for learning
# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
# https://docs.github.com/en/actions/learn-github-actions/environment-variables
# https://github.com/FranzDiebold/github-env-vars-action
# https://github.com/sdras/awesome-actions
# about artifacts:
# https://docs.github.com/en/rest/actions/artifacts

# https://github.com/actions/checkout
#
# https://github.com/actions/create-release
# https://github.com/actions/publish-action
# https://github.com/actions/download-artifact
# https://github.com/actions/cache

# To USE LATER
# https://github.com/crazy-max/ghaction-upx

# for Branding
# https://github.com/haya14busa/github-action-brandings

# Tested and worked well
# https://github.com/marketplace/actions/tag-release-on-push-action

# Controls when the workflow will run

# download sites:
# FOR PostgreSQL windows binaries
# - https://www.enterprisedb.com/download-postgresql-binaries
# - Note: need web scraping to extract the latest version.
# FOR PostGIS binraries, that include pgrouting, pgpointcloud
# http://download.osgeo.org/postgis/windows/$PG_RELEASE/  where $PG_RELEASE something like pg14
# - Note: Better to use web scraping to extract the latest version that match the PostgreSQL Major number version
# FOR experimental build https://winnie.postgis.net/download/windows/pg14/buildbot/

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" , "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ARCH: x64
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
jobs:
  Download_PostGIS:     
    runs-on: ubuntu-latest # 20.04.4
    outputs:
      PG_RELEASE: ${{ steps.get_versions.outputs.PG_RELEASE}}
      pg_link: ${{ steps.get_versions.outputs.pg_link}}
      postgis_link: ${{ steps.get_versions.outputs.postgis_link}}
      PostGIS_VER: ${{ steps.get_versions.outputs.PostGIS_VER}}
      packed_file: ${{ steps.get_versions.outputs.packed_file}}
      changelog: |
         Updates and upgrades to PostgreSQL ${{ steps.get_versions.outputs.PG_RELEASE}} and PostGIS ${{ steps.get_versions.outputs.PostGIS_VER}}
    permissions:
      contents: write
    steps:
      - uses: actions/setup-python@master
        with:
          python-version: "3.10"
      - run: |
          echo "üêß The job was automatically triggered by a ${{ github.event_name }} event and running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé The name of your branch is ${{ github.ref }} of ${{ github.repository }} repository."
      - uses: actions/checkout@master
      - id: get_versions
        run: |
          echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
          echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
          # echo "Downloading http://download.osgeo.org/postgis/windows/$PG_RELEASE/postgis-bundle-$PG_RELEASE-$PostGIS_VER$ARCH.zip."
          mkdir downloads
          cd downloads
          # wget -nv http://download.osgeo.org/postgis/windows/$PG_RELEASE/postgis-bundle-$PG_RELEASE-$PostGIS_VER$ARCH.zip
          # echo "üéâ The postgis-bundle-$PG_RELEASE-$PostGIS_VER$ARCH.zip file was DOWNLOADED.üéâ"
          echo "**$(python --version) is used for processing the script **"
          # The Python script will do most of th job, including MkDir downloads
          # read -r PG_RELEASE pg_link PostGIS_VER postgis_link packed_file <<<$(python .github/workflows/get-links_postgreSQL-PostGIS.py)
          # echo "PostgreSQL $PG_RELEASE on $pg_link"
          # echo "PostGIS v$PostGIS_VER on $postgis_link"
          # echo "Portable PostgeSQL with PostGIS download link is $packed_file"
          # echo "::set-output name=PG_RELEASE::$PG_RELEASE"
          # echo "::set-output name=PostGIS_VER::$PostGIS_VER"
          # echo "::set-output name=packed_file::$packed_file"
          wget -nv https://github.com/alhabshi3k/alhabshi3k.github.io/raw/master/pocketbase_0.7.2_windows_amd64.zip
          echo "::set-output name=PG_RELEASE::14.5"
          echo "::set-output name=PostGIS_VER::3.2.3"
          echo "::set-output name=packed_file::downloads/pocketbase_0.7.2_windows_amd64.zip"
          echo "files in workspace ${{ github.workspace }} are:"
          ls ${{ github.workspace }}
          echo "---------------------------"
          echo "files in workspace ${{ github.workspace }}/downloads are:"
          ls ${{ github.workspace }}/downloads
          echo "---------------------------"
          echo "üçè This job's status is ${{ job.status }}."  
      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "PG${{ needs.Download_PostGIS.outputs.PG_RELEASE }}-postgis-${{needs.Download_PostGIS.outputs.PostGIS_VER}}.latest.*"
          prerelease: true
          files: "${{ github.workspace }}/${{ steps.get_versions.outputs.packed_file}}"
          # bodyFile: "body.md"




          
